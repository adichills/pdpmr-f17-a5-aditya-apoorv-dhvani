import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FSDataInputStream;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IOUtils;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.net.URI;
import java.util.HashMap;
import java.util.HashSet;

public class ValidateMapper extends Mapper<Object, Text, Text, Text> {

	private static final String CSV_SEP = ",";

	HashMap<String, Integer> flights = new HashMap<String, Integer>();

	Configuration conf;
	Text outPutKey = new Text();
	Text outPutValue = new Text();

	@Override
	protected void setup(Context context) throws IOException {
		conf = context.getConfiguration();

		String inputfilePath = conf.get("output");

		populateInputLists(inputfilePath);
	}

	public void map(Object key, Text value, Context context)
			throws IOException, InterruptedException {
		String[] record = value.toString().split(CSV_SEP);

		// add year + month + day + arrTime + depTime + airline
		// + origin + destination of result flight
		Integer month = Integer.parseInt(record[2]);
		Integer day = Integer.parseInt(record[3]);
		int arrOrDep = flights.get(record[0] + month.toString()
				+ day.toString() + record[40] + record[29] + record[6]
				+ record[11] + record[20]);

		StringBuilder sb = new StringBuilder();
		sb.append(record[0]);
		sb.append(CSV_SEP);
		sb.append(record[2]);
		sb.append(CSV_SEP);
		sb.append(record[3]);
		sb.append(CSV_SEP);
		sb.append(record[40]);
		sb.append(CSV_SEP);
		sb.append(record[29]);
		sb.append(CSV_SEP);
		sb.append(record[6]);
		sb.append(CSV_SEP);
		sb.append(record[13]);
		sb.append(CSV_SEP);
		sb.append(record[22]);
		if (arrOrDep == 1) {
			sb.append(record[41]);
			context.write(new Text(record[22]), new Text(sb.toString()));
		} else if (arrOrDep == 2) {
			sb.append(record[30]);
			context.write(new Text(record[22]), new Text(sb.toString()));
		}
	}

	private void populateInputLists(String filePath) throws IOException {
		String uri = filePath;
		Configuration conf = new Configuration();
		FileSystem fs = FileSystem.get(URI.create(uri), conf);
		FSDataInputStream in = null;
		try {

			in = fs.open(new Path(uri));
			ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();

			IOUtils.copyBytes(in, byteArrayOutputStream, 4096, false);
			String fileContents = byteArrayOutputStream.toString();
			String[] records = fileContents.split("\n");
			try {
				for (int i = 0; i < records.length; i++) {
					String[] fields = records[i].split("\\s+");
					// skip the first field as it is the input
					for (int j = 1; j < fields.length; j++) {
						// add year + month + day + arrTime + depTime + airline
						// + origin + destination and 1 as value if 1st flight
						// else 2 for 2nd flight
						flights.put(fields[0] + fields[1] + fields[2]
								+ fields[3] + fields[4] + fields[5] + fields[6]
								+ fields[7], j);
					}
				}
			} catch (NumberFormatException e) {
				// not a number, ignore and do nothing
			}

		} finally {
			IOUtils.closeStream(in);
		}

	}
}
